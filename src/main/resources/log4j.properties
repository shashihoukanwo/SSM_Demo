#定义名为stdout的输出端是哪种类型，可以是：
#org.apache.log4j.ConsoleAppender（控制台），
#org.apache.log4j.FileAppender（文件），
#org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），
#org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件）
#org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#定义名为R输出端是每天产生一个日志文件
log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
#定义名为R输出端日志文件的路径
log4j.appender.file.File=logs/ssm_demo.html

#定义名输出端的layout（布局）是哪种类型，可以是
#org.apache.log4j.HTMLLayout（以HTML表格形式布局），
#org.apache.log4j.PatternLayout（可以灵活地指定布局模式），
#org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），
#org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）
log4j.appender.file.layout=org.apache.log4j.HTMLLayout
#stdout是输出模式
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#如果使用pattern布局就要指定的打印信息的具体格式ConversionPattern，打印参数如下：
#%m 输出代码中指定的消息；
#%M 输出打印该条日志的方法名；
#%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL；
#%r 输出自应用启动到输出该log信息耗费的毫秒数；
#%c 输出所属的类目，通常就是所在类的全名；
#%t 输出产生该日志事件的线程名；
#%n 输出一个回车换行符，Windows平台为"rn”，Unix平台为"n”；
#%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyyy-MM-dd HH:mm:ss,SSS}，输出类似：2002-10-18 22:10:28,921；
#%l 输出日志事件的发生位置，及在代码中的行数；
#[QC]是log信息的开头，可以为任意字符，一般为项目简称。
#输出的信息：时间 线程 日志等级 全类名  输出的消息 换行
log4j.appender.stdout.layout.ConversionPattern=%d{MM-dd HH:mm:ss} [%t] %p %c %m %n
#
log4j.rootLogger =DEBUG, stdout , file